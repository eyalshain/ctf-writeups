lotto - pwnable.kr writeup

code:
'''
unsigned char submit[6];
void play(){

        int i;
        printf("Submit your 6 lotto bytes : ");
        fflush(stdout);

        int r;
        r = read(0, submit, 6);

        printf("Lotto Start!\n");
        //sleep(1);

        // generate lotto numbers
        int fd = open("/dev/urandom", O_RDONLY);
        if(fd==-1){
                printf("error. tell admin\n");
                exit(-1);
        }
        unsigned char lotto[6];
        if(read(fd, lotto, 6) != 6){
                printf("error2. tell admin\n");
                exit(-1);
        }
        for(i=0; i<6; i++){
                lotto[i] = (lotto[i] % 45) + 1;         // 1 ~ 45
        }
        close(fd);

        // calculate lotto score
        int match = 0, j = 0;
        for(i=0; i<6; i++){
                for(j=0; j<6; j++){
                        if(lotto[i] == submit[j]){
                                match++;
                        }
                }
        }

        // win!
        if(match == 6){
                setregid(getegid(), getegid());
                system("/bin/cat flag");
        }
        else{
                printf("bad luck...\n");
        }
'''



the code uses read() to read 6 bytes from the user - that means that it's not even reading numbers, cause let's say we enter 10, the program read this as 2 character - 2 bytes. so first of all, we need to pass the actuall bytes rather than the string.

now, by looking at the for loop, we can see that it's comparing each byte of submit with each byte of lotto. basically, if there is
one byte in submit that's equal to one byte of lotto, match will increased by one, but if one byte of lotto is equal to all bytes
in submit, match will get increament 6 times! that's what we want! so we just need to generate a 6 * byte number - and that byte 
needs to be equal to one byte in lotto. so my script go through all of the numbers 1-45 and generate a 6 bytes number and sends it
as an input to the program

run the script and get the flag:
Sorry_mom_1_Forgot_to_check_duplicates
